library(rstan, lib.loc = "/net/project/ukmo/rhel7/R/R-3.6.3/lib64/R/library")
example(stan_model, package = "rstan", run.dontrun = TRUE)
options(mc.cores = parallel::detectCores())
parallel::detectCores()
knitr::opts_chunk$set(message=FALSE, error=FALSE, warning=FALSE, comment=NA, cache=FALSE)
# switch this to TRUE to save figures in separate files
savefigs <- FALSE
library("rprojroot")
root<-has_file(".Workflow-Examples-root")$make_fix_file()
library(tidyverse)
library(cmdstanr)
library(posterior)
options(pillar.neg = FALSE, pillar.subtle=FALSE, pillar.sigfig=2)
library(loo)
library(bayesplot)
theme_set(bayesplot::theme_default(base_family = "sans"))
library(patchwork)
set1 <- RColorBrewer::brewer.pal(7, "Set1")
Sys.setlocale("LC_TIME", "en_GB.UTF-8")
data <- read_csv(root("Birthdays/data", "births_usa_1969.csv"))
data <- data %>%
mutate(date = as.Date("1968-12-31") + id,
births_relative100 = births/mean(births)*100)
data %>%
ggplot(aes(x=date, y=births)) + geom_point(color=set1[2]) +
labs(x="Date", y="Relative number of births")
data %>%
ggplot(aes(x=date, y=births)) + geom_point(color=set1[2]) +
labs(x="Date", y="Relative number of births")
data %>%
ggplot(aes(x=date, y=births_relative100)) + geom_point(color=set1[2]) +
geom_hline(yintercept=100, color='gray') +
labs(x="Date", y="Relative births per day")
data %>%
group_by(day_of_year2) %>%
summarise(meanbirths=mean(births_relative100)) %>%
ggplot(aes(x=as.Date("1986-12-31")+day_of_year2, y=meanbirths)) +
geom_point(color=set1[2]) +
geom_hline(yintercept=100, color='gray') +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
labs(x="Day of year", y="Relative births per day of year")
data %>%
group_by(day_of_week) %>%
summarise(meanbirths=mean(births_relative100)) %>%
ggplot(aes(x=day_of_week, y=meanbirths)) +
geom_point(color=set1[2], size=4) +
geom_hline(yintercept=100, color='gray') +
scale_x_continuous(breaks = 1:7, labels=c('Mon','Tue','Wed','Thu','Fri','Sat','Sun')) +
labs(x="Day of week", y="Relative number of births of week")
model1 <- cmdstan_model(stan_file = root("Birthdays", "gpbf1.stan"),
include_paths = root("Birthdays"))
?set_cmdstan_path
cmdstan_path()
install_cmdstan()
model1 <- cmdstan_model(stan_file = root("Birthdays", "gpbf1.stan"),
include_paths = root("Birthdays"))
standata1 <- list(x=data$id,
y=log(data$births_relative100),
N=length(data$id),
c_f1=1.5, # factor c of basis functions for GP for f1
M_f1=20)  # number of basis functions for GP for f1
opt1 <- model1$optimize(data = standata1, init=0, algorithm='bfgs')
odraws1 <- opt1$draws()
subset(odraws1, variable=c('intercept','sigma_f1','lengthscale_f1','sigma'))
oEf <- exp(as.numeric(subset(odraws1, variable='f')))
data %>%
mutate(oEf = oEf) %>%
ggplot(aes(x=date, y=births_relative100)) +
geom_point(color=set1[2], alpha=0.2) +
geom_line(aes(y=oEf), color=set1[1]) +
geom_hline(yintercept=100, color='gray') +
labs(x="Date", y="Relative number of births")
fit1 <- model1$sample(data=standata1, iter_warmup=100, iter_sampling=100,
chains=4, parallel_chains=4, seed=3891)
draws1 <- fit1$draws()
summarise_draws(subset(draws1, variable=c('intercept','sigma_f1','lengthscale_f1','sigma')))
mcmc_trace(draws1, regex_pars=c('intercept','sigma_f1','lengthscale_f1','sigma'))
model2 <- cmdstan_model(stan_file = root("Birthdays", "gpbf2.stan"),
include_paths = root("Birthdays"))
standata2 <- list(x=data$id,
y=log(data$births_relative100),
N=length(data$id),
c_f1=1.5, # factor c of basis functions for GP for f1
M_f1=20,  # number of basis functions for GP for f1
J_f2=20)  # number of basis functions for periodic f2
standata2 <- list(x=data$id,
y=log(data$births_relative100),
N=length(data$id),
c_f1=1.5, # factor c of basis functions for GP for f1
M_f1=20,  # number of basis functions for GP for f1
J_f2=20)  # number of basis functions for periodic f2
opt2 <- model2$optimize(data=standata2, init=0, algorithm='bfgs')
odraws2 <- opt2$draws()
subset(odraws2, variable=c('sigma_','lengthscale_','sigma'), regex=TRUE)
Ef <- exp(as.numeric(subset(odraws2, variable='f')))
Ef1 <- as.numeric(subset(odraws2, variable='f1'))
Ef1 <- exp(Ef1 - mean(Ef1) + mean(log(data$births_relative100)))
Ef2 <- as.numeric(subset(odraws2, variable='f2'))
Ef2 <- exp(Ef2 - mean(Ef2) + mean(log(data$births_relative100)))
pf <- data %>%
mutate(Ef = Ef) %>%
ggplot(aes(x=date, y=births_relative100)) + geom_point(color=set1[2], alpha=0.2) +
geom_line(aes(y=Ef), color=set1[1]) +
geom_hline(yintercept=100, color='gray') +
labs(x="Date", y="Relative number of births")
pf1 <- data %>%
mutate(Ef1 = Ef1) %>%
ggplot(aes(x=date, y=births_relative100)) + geom_point(color=set1[2], alpha=0.2) +
geom_line(aes(y=Ef1), color=set1[1]) +
geom_hline(yintercept=100, color='gray') +
labs(x="Date", y="Relative number of births")
pf2 <- data %>%
mutate(Ef2 = Ef2) %>%
group_by(day_of_year2) %>%
summarise(meanbirths=mean(births_relative100), meanEf2=mean(Ef2)) %>%
ggplot(aes(x=as.Date("1987-12-31")+day_of_year2, y=meanbirths)) + geom_point(color=set1[2], alpha=0.2) +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
geom_line(aes(y=meanEf2), color=set1[1]) +
geom_hline(yintercept=100, color='gray') +
labs(x="Date", y="Relative number of births of year")
pf / (pf1 + pf2)
init2 <- sapply(c('lengthscale_f1','lengthscale_f2','sigma_f1','sigma_f2','sigma','beta_f1','beta_f2'),
function(variable) {as.numeric(subset(odraws2, variable=variable))})
fit2 <- model2$sample(data=standata2, iter_warmup=100, iter_sampling=100,
chains=4, parallel_chains=4,
init=function() { init2 })
draws2 <- fit2$draws()
summarise_draws(subset(draws2, variable=c('sigma_','lengthscale_','sigma'), regex=TRUE))
draws2 <- as_draws_matrix(draws2)
Ef <- exp(apply(subset(draws2, variable='f'), 2, median))
Ef1 <- apply(subset(draws2, variable='f1'), 2, median)
Ef1 <- exp(Ef1 - mean(Ef1) + mean(log(data$births_relative100)))
Ef2 <- apply(subset(draws2, variable='f2'), 2, median)
Ef2 <- exp(Ef2 - mean(Ef2) + mean(log(data$births_relative100)))
pf <- data %>%
mutate(Ef = Ef) %>%
ggplot(aes(x=date, y=births_relative100)) + geom_point(color=set1[2], alpha=0.2) +
geom_line(aes(y=Ef), color=set1[1]) +
geom_hline(yintercept=100, color='gray') +
labs(x="Date", y="Relative number of births")
pf1 <- data %>%
mutate(Ef1 = Ef1) %>%
ggplot(aes(x=date, y=births_relative100)) + geom_point(color=set1[2], alpha=0.2) +
geom_line(aes(y=Ef1), color=set1[1]) +
geom_hline(yintercept=100, color='gray') +
labs(x="Date", y="Relative number of births")
pf2 <- data %>%
mutate(Ef2 = Ef2) %>%
group_by(day_of_year2) %>%
summarise(meanbirths=mean(births_relative100), meanEf2=mean(Ef2)) %>%
ggplot(aes(x=as.Date("1987-12-31")+day_of_year2, y=meanbirths)) + geom_point(color=set1[2], alpha=0.2) +
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
geom_line(aes(y=meanEf2), color=set1[1]) +
geom_hline(yintercept=100, color='gray') +
labs(x="Date", y="Relative number of births of year")
pf / (pf1 + pf2)
df <- as_tibble(read_csv("mps.borough.crime.2010-2021.csv"))
sdf <- filter(df, MajorText == 'Public Order Offences' & borough == 'Westminster') %>% drop_na()
hotdays <- as_tibble(read_csv("/net/home/h03/hsteptoe/lib/Met-Office-Climate-Data-Challenge-May-2022/climate_data/monthly_meantemp_hotdays_London_2001_2022.csv",
col_types = cols(period_start = col_date(format = "%d/%m/%Y"),
days_gt_15C = col_integer(), days_gt_20C = col_integer(),
days_gt_25C = col_integer(), days_gt_30C = col_integer())))
hotdays <- hotdays %>% rename(date = period_start)
sdf <- left_join(sdf, hotdays, by='date')
sdf
standata1
data
sdf
data$id
tail(data$id)
sdf$index
seq(10)
sdf
data
min(data$births)
library(readxl)
BH_weekend_days <- read_excel("BH_weekend_days.xlsx")
View(BH_weekend_days)
holidays <- as_tibble(BH_weekend_days <- read_excel("BH_weekend_days.xlsx"))
holidays
holidays <- as_tibble(BH_weekend_days <- read_excel("BH_weekend_days.xlsx")) %>% replace(is.na(.), 0)
holidays
sdf
library(lubridate, lib.loc = "/net/project/ukmo/rhel7/R/R-3.6.3/lib64/R/library")
make_date(year = sdf$year, month = sdf$month)
holidays <- as_tibble(BH_weekend_days <- read_excel("BH_weekend_days.xlsx")) %>% replace(is.na(.), 0) %>%
mutate(date = make_date(year = year, month = month))
holidays <- as_tibble(BH_weekend_days <- read_excel("BH_weekend_days.xlsx")) %>% replace(is.na(.), 0) %>%
mutate(date = make_date(year = .year, month = .month))
make_date(year = holidays$year, month = holidays$month)
holidays
make_date(year = holidays$Year, month = holidays$Month)
as.Date(paste0(holidays$Year, holidays$Month), format = "%Y%b")
paste0(holidays$Year, holidays$Month)
paste0(holidays$Year, "-", holidays$Month)
as.Date(paste0(holidays$Year, holidays$Month), format = "%Y%b")
as.Date(holidays$Year, format = "%Y")
ISOdate(year = holidays$Year)
ISOdate(year = holidays$Year, month=holidays$Month day = "01")
ISOdate(year = holidays$Year, month=holidays$Month, day = "01")
holidays <- as_tibble(BH_weekend_days <- read_excel("BH_weekend_days.xlsx")) %>% replace(is.na(.), 0) %>%
mutate(date = make_date(year = Year, month = MonthN))
holidays <- as_tibble(BH_weekend_days <- read_excel("BH_weekend_days.xlsx")) %>% replace(is.na(.), 0)
holidays
holidays <- as_tibble(BH_weekend_days <- read_excel("BH_weekend_days.xlsx")) %>% replace(is.na(.), 0)
holidays
make_date(year = Year, month = MonthN)
ISOdate(year = holidays$Year, month=holidays$Month, day = "01")
ISOdate(year = holidays$Year, month=holidays$MonthN, day = "01")
holidays <- as_tibble(BH_weekend_days <- read_excel("BH_weekend_days.xlsx")) %>% replace(is.na(.), 0) %>%
mutate(date = make_date(year = Year, month = MonthN))
holidays
left_join(sdf, holidays, by='date')
holidays
holidays <- as_tibble(BH_weekend_days <- read_excel("BH_weekend_days.xlsx")) %>% replace(is.na(.), 0) %>%
mutate(date = make_date(year = Year, month = MonthN)) %>% select(-c(Year, Month, MonthN))
holidays
left_join(sdf, holidays, by='date')
sdf <- left_join(sdf, holidays, by='date')
m <- gam(value ~ s(month, bs='cc', k=12) + s(year) + te(month, year) + s(`Total non-work days`), data = df, family = ziP(), method = "REML")
library(mgcv, lib.loc = "/net/project/ukmo/rhel7/R/R-3.6.3/lib64/R/library")
m <- gam(value ~ s(month, bs='cc', k=12) + s(year) + te(month, year) + s(`Total non-work days`), data = df, family = ziP(), method = "REML")
holidays <- as_tibble(BH_weekend_days <- read_excel("BH_weekend_days.xlsx")) %>% replace(is.na(.), 0) %>%
mutate(date = make_date(year = Year, month = MonthN)) %>% select(-c(Year, Month, MonthN))
sdf <- filter(df, MajorText == 'Public Order Offences' & borough == 'Westminster') %>% drop_na()
sdf <- left_join(sdf, hotdays, by='date')
holidays <- as_tibble(BH_weekend_days <- read_excel("BH_weekend_days.xlsx")) %>% replace(is.na(.), 0) %>%
mutate(date = make_date(year = Year, month = MonthN)) %>% select(-c(Year, Month, MonthN))
sdf <- left_join(sdf, holidays, by='date')
sdf
m <- gam(value ~ s(month, bs='cc', k=12) + s(year) + te(month, year) + s(TNWD), data = df, family = ziP(), method = "REML")
m <- gam(value ~ s(month, bs='cc', k=12) + s(year) + te(month, year) + s(TNWD), data = sdf, family = ziP(), method = "REML")
m <- gam(value ~ s(month, bs='cc', k=12) + s(year) + s(TNWD), data = sdf, family = ziP(), method = "REML")
m <- gam(value ~ s(month, bs='cc', k=12) + s(year) + TNWD, data = sdf, family = ziP(), method = "REML")
plot(m, pages=1)
summary(m)
m <- gam(value ~ s(month, bs='cc', k=12) + s(year) + s(TNWD, k=2), data = sdf, family = ziP(), method = "REML")
summary(m)
plot(m, pages=1)
sdf
days_in_month(sdf$date)
sdf$dim <- days_in_month(sdf$date)
sdf
m <- gam(value/dim ~ s(month, bs='cc', k=12) + s(year) + s(TNWD, k=2), data = sdf, family = ziP(), method = "REML")
m <- gam(value ~ s(month, bs='cc', k=12) + s(year) + s(TNWD, k=2), data = sdf, family = ziP(), weights = dim, method = "REML")
plot(m, pages=1)
m <- gamm(value/dim ~ s(month, bs='cc', k=12) + s(year) + s(TNWD, k=2), data = sdf, method = "REML")
plot(m, pages=1)
plot(m$gam, pages=1)
m <- gamm(value/dim ~ s(month, bs='cc', k=12) + s(year) + s(TNWD, k=2), data = sdf, method = "REML",
correlation = corARMA(form = ~ 1|Year, p = 1))
m <- gamm(value/dim ~ s(month, bs='cc', k=12) + s(year) + s(TNWD, k=2), data = sdf, method = "REML",
correlation = corARMA(form = ~ 1|year, p = 1))
plot(m$gam, pages=1)
plot(m$gam, pages=1, scale=0)
m <- gamm(value/dim ~ s(month, bs='cc', k=12) + s(year) + te(month, year) + s(TNWD, k=2), data = sdf, method = "REML",
correlation = corARMA(form = ~ 1|year, p = 1))
plot(m$gam, pages=1, scale=0)
summary(m)
summary(m$gam)
summary(m$lme)
m <- gamm(value/dim ~ s(month, bs='cc', k=12) + s(year) + te(month, year) + s(TNWD, k=2), data = sdf, method = "REML", family = Gamma(),
correlation = corARMA(form = ~ 1|year, p = 1))
sdf
sdf$value/sdf$dim
out <- sdf$value/sdf$dim
min(out)
max(out)
m <- gamm(value/dim ~ s(month, bs='cc', k=12) + s(year) + te(month, year) + s(TNWD, k=2), data = sdf, method = "REML", family = Gamma(),
correlation = corARMA(form = ~ 1|year, p = 1))
m <- gamm(value/dim ~ s(month, bs='cc', k=12) + s(year) + te(month, year) + s(TNWD, k=2), data = sdf, method = "REML", family = gamma(),
correlation = corARMA(form = ~ 1|year, p = 1))
m <- gamm(value/dim ~ s(month, bs='cc', k=12) + s(year) + te(month, year) + s(TNWD, k=2), data = sdf, method = "REML", family = Gamma,
correlation = corARMA(form = ~ 1|year, p = 1))
m <- gamm(value/dim ~ s(month, bs='cc', k=12) + s(year) + te(month, year) + s(TNWD, k=2), data = sdf, method = "REML", family = Gamma(link = "identity"),
correlation = corARMA(form = ~ 1|year, p = 1))
m <- gamm(value/dim ~ s(month, bs='cc', k=12) + s(year) + te(month, year) + s(TNWD, k=2), data = sdf, method = "REML", family = Gamma(),
correlation = corARMA(form = ~ 1|year, p = 1))
sdf
m2 <- bam(values/dim ~ s(month, bs='cc', k=12, by=as.factor(borough)) + s(year, by=as.factor(borough)) + te(month, year) + s(TNWD, k=2))
m2 <- bam(value/dim ~ s(month, bs='cc', k=12, by=as.factor(borough)) + s(year, by=as.factor(borough)) + te(month, year) + s(TNWD, k=2))
m2 <- bam(value/dim ~ s(month, bs='cc', k=12, by=as.factor(borough)) + s(year, by=as.factor(borough)) + te(month, year) + s(TNWD, k=2), data=sdf, family=Gamma())
sdf < 0
sdf[sdf < 0]
m2 <- bam(value/dim ~ s(month, bs='cc', k=12, by=as.factor(borough)) + s(year, by=as.factor(borough)) + te(month, year) + s(TNWD, k=2), data=sdf)
m2
plot(m2, pages=1)
df
m2 <- bam(value ~ s(month, bs='cc', k=12, by=as.factor(borough)) + s(year, by=as.factor(borough)) + te(month, year), data=df)
m2 <- bam(value ~ s(month, bs='cc', k=12, by=as.factor(borough)) + s(year, by=as.factor(borough)), data=df)
m2 <- bam(value ~ s(month, bs='cc', k=12, by=as.factor(borough)) + s(year, by=as.factor(borough)) + + s(as.factor(borough), bs="re"), data=df)
m2 <- bam(value ~ s(month, bs='cc', k=12, by=as.factor(borough)) + s(year, by=as.factor(borough)) + s(as.factor(borough), bs="re"), data=df)
df
m2 <- bam(value ~ s(month, bs='cc', k=12, by=as.factor(borough)) + s(year, by=as.factor(borough)) + s(as.factor(borough), bs="re"), data=df)
df$borough
as.factor(df$borough)
m2 <- bam(value ~ s(month, bs='cc', k=12, by=as.factor(borough)) + s(year, by=as.factor(borough)) + s(borough, bs="re"), data=df)
m2 <- bam(value ~ s(month, bs='cc', k=12, by=as.factor(borough)) + s(year, by=as.factor(borough)) + s(as.factor(borough), bs="re"), data=df)
m2 <- bam(value ~ s(month, bs='cc', k=12, by=as.factor(borough)) + s(year, by=as.factor(borough)) + s(as.factor(borough), bs="re"), data=sdf)
sdf
df['bfac'] <- as.factor(df$borough)
df
m2 <- bam(value ~ s(month, bs='cc', k=12, by=bfac) + s(year, by=bfac) + s(bfac, bs="re"), data=df)
summary(m2)
plot(m2)
plot(m2, scale=0)
m2 <- bam(value ~ s(month, bs='cc', k=12) + t2(month, bs='cc', k=12, by=bfac) + s(year) + t2(year, by=bfac) + s(bfac, bs="re"), data=df)
plot(m2, select=1)
plot(m2, select=1, scale=0)
plot(m2, select=2, scale=0)
plot(m2, select=32, scale=0)
plot(m2, select=33, scale=0)
plot(m2, select=35, scale=0)
m2 <- bam(value ~ te(month, bs='cc', k=12) + t2(month, bfac, bs=c('cc', 're'), k=12) + te(year, k=3) + t2(year, bfac, cs=c('cs', 're')), data=df)
m2 <- bam(value ~ s(month, bs='cc', k=12, m=2) + s(month, bs='cc', k=12, by=bfac, m=1) + s(year, k=3, m=2) + s(year, k=3, by=bfac, m=2) + s(bfac, bs="re", k=33), data=df)
m2 <- bam(value ~ s(month, bs='cc', k=12, m=2) + s(month, bs='cc', k=12, by=bfac, m=1) + s(year, k=3, m=2) + s(year, k=3, by=bfac, m=1) + s(bfac, bs="re", k=33), data=df, method="REML")
m2 <- bam(value ~ s(month, bs='cc', k=12, m=2) + s(month, bs='cc', k=12, by=bfac, m=1) + s(year, k=3, m=2) + s(year, k=3, by=bfac, m=1) + s(bfac, bs="re", k=33), data=df, method="REML", family="poisson")
m2 <- bam(value ~ s(month, bs='cc', k=12, m=2) + s(month, bs='cc', k=12, by=bfac, m=1) + s(year, k=3, m=2) + s(year, k=3, by=bfac, m=1) + s(bfac, bs="re", k=33), data=df, method="REML", family=ziP)
plot(m2, select=1, scale=0)
plot(m2, select=2, scale=0)
plot(m2, select=1, scale=0)
plot(m2, select=34, scale=0)
plot(m2, select=35, scale=0)
plot(m2, select=36, scale=0)
plot(m2, select=35, scale=0)
plot(m, select=1, scale=0)
plot(m$gam, select=1, scale=0)
plot(m2, select=1, scale=0)
plot(m2, select=2, scale=0)
plot(m2, select=3, scale=0)
plot(m, select=3, scale=0)
plot(m$gam, select=3, scale=0)
plot(m$gam, select=4, scale=0)
plot(m, select=1, scale=0)
plot(m2, select=1, scale=0)
plot(m, select=2, scale=0)
plot(m2, select=2, scale=0)
plot(m2, select=34, scale=0)
plot(m2, select=35, scale=0)
plot(m2, select=36, scale=0)
plot(m2, select=35, scale=0)
plot(m2, select=36, scale=0)
plot(m2, select=37, scale=0)
plot(m2, select=63, scale=0)
plot(m2, select=65, scale=0)
plot(m2, select=68, scale=0)
plot(m2, select=69, scale=0)
plot(m$gam, select=2, scale=0)
plot(m$gam, select=3, scale=0)
plot(m$gam, select=4, scale=0)
plot(m$gam, select=1, scale=0)
